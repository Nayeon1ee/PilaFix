<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReservDAO">
	<resultMap type="com.dev.pilafix.common.member.CenterVO" id="centerResult">
		<result property="ctName" column="CT_NAME" />
		<result property="ctCode" column="CT_CODE" />
	</resultMap>
	
	<resultMap type="centerLesson" id="centerLessonResult">
		<id property="lsCode" column="LS_CODE"/>
		<result property="lsName" column="LS_NAME"/>
		<result property="lsType" column="LS_TYPE"/>
		<result property="lsDate" column="LS_DATE"/>
		<result property="lsTime" column="LS_TIME"/>
		<result property="lessonDatetime" column="COMBINED_DATETIME"/>
		<result property="lessonEndDatetime" column="COMBINED_END_DATETIME"/>
		<result property="lsCapacity" column="LS_CAPACITY"/>
		<result property="lsCurrentApplicants" column="LS_CURRENT_APPLICANTS"/>
		<result property="trainerMemberCode" column="TRAINER_MEMBER_CODE"/>
		<result property="trainerMemberName" column="TRAINER_MEMBER_NAME"/>
		<result property="lsContent" column="LS_CONTENT"/>
		<result property="centerCode" column="CENTER_CODE"/>
		<result property="lsRegistrationDate" column="LS_REGISTRATION_DATE"/>
		<result property="lsCloseYN" column="LS_CLOSE_YN"/>	
		<result property="csName" column="CS_NAME"/>
		<result property="csMemberCode" column="CS_MEMBER_CODE"/>
		<result property="lsRegistrationDateToString" column="LS_REGISTRATION_DATE_TO_STRING"/>
		<result property="lsEndTime" column="LS_END_TIME"/>
		<result property="centerName" column="CENTER_NAME"/>
	</resultMap>
	
	<resultMap type="member" id="memberTicket">
	    <id property="csMemberCode" column="CS_MEMBER_CODE"/>
	    <result property="csName" column="CS_NAME" />
	    <result property="ticketCodePersonal1" column="TICKET_CODE_PERSONAL1" />
		<result property="ticketRemainingCountPersonal1" column="TICKET_REMAINING_COUNT_PERSONAL1" />
		<result property="ticketStartDatePersonal1" column="TICKET_START_DATE_PERSONAL1" />
		<result property="ticketExpiryDatePersonal1" column="TICKET_EXPIRY_DATE_PERSONAL1" />
		<result property="ticketExpiryYnPersonal1" column="TICKET_EXPIRY_YN_PERSONAL1" />
		<result property="ticketCodeGroup1" column="TICKET_CODE_GROUP1" />
		<result property="ticketRemainingCountGroup1" column="TICKET_REMAINING_COUNT_GROUP1" />
		<result property="ticketStartDateGroup1" column="TICKET_START_DATE_GROUP1" />
		<result property="ticketExpiryDateGroup1" column="TICKET_EXPIRY_DATE_GROUP1" />
		<result property="ticketExpiryYnGroup1" column="TICKET_EXPIRY_YN_GROUP1" />
		<result property="ticketNameGroup1" column="TICKET_NAME_GROUP1" />
		<result property="ticketNamePersonal1" column="TICKET_NAME_PERSONAL1" />
	</resultMap>
	
		
	<resultMap type="com.dev.pilafix.member.reserve.UsingTicketVO" id="usingTicket">
	    <id property="csMemberCode" column="CS_MEMBER_CODE"/>
	    <result property="csName" column="CS_NAME" />
	    <result property="ticketCode" column="TICKET_CODE" />
	    <result property="ticketName" column="TICKET_NAME" />
		<result property="ticketRemainingCount" column="TICKET_REMAINING_COUNT" />
		<result property="ticketStartDate" column="TICKET_START_DATE" />
		<result property="ticketExpiryDate" column="TICKET_EXPIRY_DATE" />
		<result property="ticketExpiryYn" column="TICKET_EXPIRY_YN" />
	</resultMap>
	
	<resultMap type="userguide" id="userguideResult">
		<id property="ugCode" column="UG_CODE"/>
		<result property="ugType" column="UG_TYPE" />
		<result property="ugName" column="UG_NAME" />
		<result property="ugContent" column="UG_CONTENT" />
		<result property="ugRegistrationDate" column="UG_REGISTRATION_DATE" />
		<result property="ugModifiedDate" column="UG_MODIFIED_DATE" />
		<result property="ugOpenYN" column="UG_OPEN_YN" />
		<result property="ugCenterCode" column="UG_CENTER_CODE" />
	</resultMap>

	<resultMap type="sendSmsHistory" id="SendSmsHistoryResult">
		<id property="shSendCode" column="SH_SEND_CODE"/>
		<result property="shSendDatetime" column="SH_SEND_DATETIME" />
		<result property="shSendCenterCode" column="SH_SEND_CENTER_CODE" />
		<result property="shRecipientName" column="SH_RECIPIENT_NAME" />
		<result property="shRecipientPhone" column="SH_RECIPIENT_PHONE" />
		<result property="shRecipientContent" column="SH_RECIPIENT_CONTENT" />
		<result property="shSuccessYn" column="SH_SUCCESS_YN" />
		<result property="shSuccessDatetime" column="SH_SUCCESS_DATETIME" />
		<result property="shFailReason" column="SH_FAIL_REASON" />
		<result property="shSendCenterName" column="SH_SEND_CENTER_NAME" />
	</resultMap>

	<resultMap type="com.dev.pilafix.member.reserve.ReservVO" id="reserveInfo">
		<id property="rsCode" column="RS_CODE" />
		<result property="memberCode" column="MEMBER_CODE"/>
		<result property="usedTicketCode" column="USED_TICKET_CODE"/>
		<result property="centerCode" column="CENTER_CODE"/>
		<result property="lessonCode" column="LESSON_CODE"/>
		<result property="rsDatetime" column="RS_DATETIME"/>
		<result property="rsCancelYn" column="RS_CANCEL_YN"/>
	</resultMap>
	
	<resultMap type="Integer" id="codeResult"> 
	     <result property="" column="MEMBER_CODE"/>  <!-- List<Integer>타입이므로 property가 존재하지 않음  -->
	</resultMap>
	
	
	<!-- 회원번호에 해당하는 사람의 연동센터 이름 가져오기 -->
	<select id="getConnCenterList" resultMap="centerResult" parameterType="int">
		SELECT CT_NAME,CT_CODE
		FROM TBL_CENTER
		WHERE CT_CODE IN (
	    		SELECT CONNECTED_CENTER_CODE1 FROM TBL_CST WHERE CS_MEMBER_CODE = #{csMemberCode}
	  		    UNION
	    		SELECT CONNECTED_CENTER_CODE2 FROM TBL_CST WHERE CS_MEMBER_CODE = #{csMemberCode}
	    		UNION 
	    		SELECT CONNECTED_CENTER_CODE3 FROM TBL_CST WHERE CS_MEMBER_CODE = #{csMemberCode}
		)
	</select>
	
	<!-- 수업정보 조회 -->
	<select id="getLessonList" parameterType="java.util.Map" resultMap="centerLessonResult">
	    SELECT LS_CODE, LS_NAME, TRAINER_MEMBER_CODE, LS_CAPACITY, LS_CURRENT_APPLICANTS, LS_TYPE, LS_DATE,CENTER_CODE,LS_CLOSE_YN,
	    	(SELECT CT_NAME FROM TBL_CENTER WHERE CT_CODE=CENTER_CODE)AS CENTER_NAME,
	    	(SELECT CS_NAME FROM TBL_CST WHERE CS_MEMBER_CODE=TRAINER_MEMBER_CODE) AS TRAINER_MEMBER_NAME,
	        TO_CHAR(ls_time, 'AM HH:MI') AS LS_TIME, 
	        TO_CHAR(ls_time + INTERVAL '50 minutes', 'AM HH:MI') AS LS_END_TIME,
	        (LS_DATE::TIMESTAMP + LS_TIME::TIME)::TIMESTAMP WITH TIME ZONE AS COMBINED_DATETIME,
	        (LS_DATE::TIMESTAMP + TO_CHAR(ls_time + INTERVAL '50 minutes', 'AM HH:MI')::TIME)::TIMESTAMP WITH TIME ZONE AS COMBINED_END_DATETIME
	    FROM TBL_LESSON
	    WHERE 
	        CENTER_CODE = #{ctCode} 
	        AND 
	      	LS_DATE = TO_DATE(#{selectedDate}, 'YYYY-MM-DD')
            AND LS_TYPE = #{lessonType}
	    ORDER BY COMBINED_DATETIME ASC
	</select>
	
	<!-- 하나의 수업 정보 조회 -->
	<select id="getLessonDetail" resultMap="centerLessonResult">
		SELECT LS_CODE, LS_NAME, TRAINER_MEMBER_CODE, LS_CAPACITY, LS_CURRENT_APPLICANTS, LS_TYPE,LS_DATE, CENTER_CODE,
	        (SELECT CT_NAME FROM TBL_CENTER WHERE CT_CODE=CENTER_CODE)AS CENTER_NAME,
	        TO_CHAR(ls_time, 'AM HH:MI') AS LS_TIME, 
	        TO_CHAR(ls_time + INTERVAL '50 minutes', 'AM HH:MI') AS LS_END_TIME,
	        (LS_DATE::TIMESTAMP + LS_TIME::TIME)::TIMESTAMP WITH TIME ZONE AS COMBINED_DATETIME,
	        (LS_DATE::TIMESTAMP + TO_CHAR(ls_time + INTERVAL '50 minutes', 'AM HH:MI')::TIME)::TIMESTAMP WITH TIME ZONE AS COMBINED_END_DATETIME,
	        (SELECT CS_NAME FROM TBL_CST WHERE CS_MEMBER_CODE=TRAINER_MEMBER_CODE ) AS TRAINER_MEMBER_NAME 
	    FROM TBL_LESSON
	    WHERE 
	        LS_CODE = #{lsCode}
	</select>
	
	<!-- 회원이 가진 수강권 정보 조회  -->
	<select id="getMyTicketInfo" resultMap="memberTicket">
		SELECT CS_MEMBER_CODE, CS_NAME, TICKET_CODE_PERSONAL1, TICKET_REMAINING_COUNT_PERSONAL1,
				TICKET_START_DATE_PERSONAL1, TICKET_EXPIRY_DATE_PERSONAL1, TICKET_EXPIRY_YN_PERSONAL1, TICKET_CODE_GROUP1,
				TICKET_REMAINING_COUNT_GROUP1, TICKET_START_DATE_GROUP1, TICKET_EXPIRY_DATE_GROUP1, TICKET_EXPIRY_YN_GROUP1,
				(select tk_name from tbl_ticket where tk_code=TICKET_CODE_PERSONAL1) as TICKET_NAME_PERSONAL1, 
				(select tk_name from tbl_ticket where tk_code=TICKET_CODE_GROUP1) as TICKET_NAME_GROUP1
		FROM TBL_CST 
		WHERE CS_MEMBER_CODE=#{csMemberCode}
	</select>
	
	<!-- 회원이 가진 수강권 정보 조회 (그룹) 화면에서 한 번에 보이기 위함  -->
	<select id="getMyTicketInfoByG" resultMap="usingTicket">
		SELECT CS_MEMBER_CODE, CS_NAME, TICKET_CODE_GROUP1 as TICKET_CODE,
				TICKET_REMAINING_COUNT_GROUP1 as TICKET_REMAINING_COUNT, TICKET_START_DATE_GROUP1 as TICKET_START_DATE, TICKET_EXPIRY_DATE_GROUP1 as TICKET_EXPIRY_DATE,
				TICKET_EXPIRY_YN_GROUP1 as TICKET_EXPIRY_YN ,
				(select tk_name from tbl_ticket where tk_code=TICKET_CODE_GROUP1) as TICKET_NAME
		FROM TBL_CST 
		WHERE CS_MEMBER_CODE=#{csMemberCode}
	</select>
	
	<!-- 회원이 가진 수강권 정보 조회 (개인) 화면에서 한 번에 보이기 위함 -->
	<select id="getMyTicketInfoByP" resultMap="usingTicket">
		SELECT CS_MEMBER_CODE, CS_NAME, TICKET_CODE_PERSONAL1  as TICKET_CODE,
			 TICKET_REMAINING_COUNT_PERSONAL1 as TICKET_REMAINING_COUNT,
				TICKET_START_DATE_PERSONAL1 as TICKET_START_DATE, TICKET_EXPIRY_DATE_PERSONAL1 as TICKET_EXPIRY_DATE, 
				TICKET_EXPIRY_YN_PERSONAL1 as TICKET_EXPIRY_YN, 
				(select tk_name from tbl_ticket where tk_code=TICKET_CODE_PERSONAL1) as TICKET_NAME
		FROM TBL_CST 
		WHERE CS_MEMBER_CODE=#{csMemberCode}
	</select>
	
	
	<!-- 센터의 예약 이용정책 조회  -->
	<select id="getReservGuide" resultMap="userguideResult">
		SELECT UG_NAME,UG_CONTENT 
		FROM TBL_USER_GUIDE 
		WHERE UG_CENTER_CODE=#{centerCode}
			AND UG_TYPE = '예약'
	</select>
	
	
	<!-- 수업 정보 조회 -->
	<select id="getReservationInfo" resultMap="reserveInfo">
		SELECT * FROM 
		TBL_RESERV
		WHERE RS_CODE=#{rsCode}
	</select>
	
	
	<!-- ========================= 예약 하기 ========================= -->
	<!-- STEP01. 예약테이블 등록 -->
	<insert id="insertReservationInfo" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="rsCode">
		INSERT INTO TBL_RESERV(RS_CODE, MEMBER_CODE, USED_TICKET_CODE, CENTER_CODE, LESSON_CODE, RS_DATETIME, RS_CANCEL_YN)
		VALUES(CONCAT('RS',NEXTVAL('SEQ_RESERV')), #{csMemberCode},#{ticketCode} ,#{ctCode}, #{lsCode}, CURRENT_TIMESTAMP, false)
	</insert>
	
	<!-- 그룹 수업의 예약  -->
	<update id="makeReservationGroup" parameterType="java.util.Map"  >
		<!-- STEP02. 회원테이블 수강권 매수 -1 -->
		UPDATE TBL_CST
		SET TICKET_REMAINING_COUNT_GROUP1=(TICKET_REMAINING_COUNT_GROUP1-1)
		WHERE CS_MEMBER_CODE=#{csMemberCode};
		
		<!-- STEP03. 수업테이블 현재신청인원 +1 -->
		UPDATE TBL_LESSON
		SET LS_CURRENT_APPLICANTS=(LS_CURRENT_APPLICANTS+1)
		WHERE LS_CODE=#{lsCode};
		
		<!-- STEP04. 출결레코드에 추가 -->
		UPDATE TBL_ATTEND SET
			AT_MEMBER1_CODE = CASE WHEN AT_MEMBER1_CODE = 0 THEN #{csMemberCode} ELSE AT_MEMBER1_CODE END,
			AT_MEMBER2_CODE = CASE WHEN AT_MEMBER1_CODE != 0 AND AT_MEMBER2_CODE = 0 THEN #{csMemberCode} ELSE AT_MEMBER2_CODE END,
			AT_MEMBER3_CODE = CASE WHEN AT_MEMBER1_CODE != 0 AND AT_MEMBER2_CODE != 0 AND AT_MEMBER3_CODE = 0 THEN #{csMemberCode} ELSE AT_MEMBER3_CODE END,
			AT_MEMBER4_CODE = CASE WHEN AT_MEMBER1_CODE != 0 AND AT_MEMBER2_CODE != 0 AND AT_MEMBER3_CODE !=0 AND AT_MEMBER4_CODE =0 THEN #{csMemberCode} ELSE AT_MEMBER4_CODE END,
			AT_MEMBER5_CODE = CASE WHEN AT_MEMBER1_CODE != 0 AND AT_MEMBER2_CODE != 0 AND AT_MEMBER3_CODE !=0 AND AT_MEMBER4_CODE !=0 AND AT_MEMBER5_CODE=0 THEN #{csMemberCode} ELSE AT_MEMBER5_CODE END,
			AT_MEMBER6_CODE = CASE WHEN AT_MEMBER1_CODE != 0 AND AT_MEMBER2_CODE != 0 AND AT_MEMBER3_CODE !=0 AND AT_MEMBER4_CODE !=0 AND AT_MEMBER5_CODE!=0 AND AT_MEMBER6_CODE=0 THEN #{csMemberCode} ELSE AT_MEMBER6_CODE END
		WHERE LESSON_CODE = #{lsCode}
		
	</update>
	
	<!-- 개인 수업의 예약  -->
	<update id="makeReservationPersonal" parameterType="java.util.Map"  >
		<!-- STEP02. 회원테이블 수강권 매수 -1 -->
		UPDATE TBL_CST
		SET TICKET_REMAINING_COUNT_PERSONAL1=(TICKET_REMAINING_COUNT_PERSONAL1-1)
		WHERE CS_MEMBER_CODE=#{csMemberCode};
		
		<!-- STEP03. 수업테이블 현재신청인원 +1 -->
		UPDATE TBL_LESSON
		SET LS_CURRENT_APPLICANTS=(LS_CURRENT_APPLICANTS+1)
		WHERE LS_CODE=#{lsCode};
		
		<!-- STEP04. 출결레코드에 추가 -->
		UPDATE TBL_ATTEND SET
			AT_MEMBER1_CODE = CASE WHEN AT_MEMBER1_CODE = 0 THEN #{csMemberCode} ELSE AT_MEMBER1_CODE END,
			AT_MEMBER2_CODE = CASE WHEN AT_MEMBER1_CODE != 0 AND AT_MEMBER2_CODE = 0 THEN #{csMemberCode} ELSE AT_MEMBER2_CODE END,
			AT_MEMBER3_CODE = CASE WHEN AT_MEMBER1_CODE != 0 AND AT_MEMBER2_CODE != 0 AND AT_MEMBER3_CODE = 0 THEN #{csMemberCode} ELSE AT_MEMBER3_CODE END,
			AT_MEMBER4_CODE = CASE WHEN AT_MEMBER1_CODE != 0 AND AT_MEMBER2_CODE != 0 AND AT_MEMBER3_CODE !=0 AND AT_MEMBER4_CODE =0 THEN #{csMemberCode} ELSE AT_MEMBER4_CODE END,
			AT_MEMBER5_CODE = CASE WHEN AT_MEMBER1_CODE != 0 AND AT_MEMBER2_CODE != 0 AND AT_MEMBER3_CODE !=0 AND AT_MEMBER4_CODE !=0 AND AT_MEMBER5_CODE=0 THEN #{csMemberCode} ELSE AT_MEMBER5_CODE END,
			AT_MEMBER6_CODE = CASE WHEN AT_MEMBER1_CODE != 0 AND AT_MEMBER2_CODE != 0 AND AT_MEMBER3_CODE !=0 AND AT_MEMBER4_CODE !=0 AND AT_MEMBER5_CODE!=0 AND AT_MEMBER6_CODE=0 THEN #{csMemberCode} ELSE AT_MEMBER6_CODE END
		WHERE LESSON_CODE = #{lsCode}
		
	</update>	
	
	<!-- STEP05. 알림 테이블 등록(NoticeDAO에서 진행) -->
	<!-- STEP06. 문자발송 -->
	<!-- STEP07. 문자발송 이력 등록  -->
	<!-- 성공 시간에서 성공이면 현재 시간이 들어가고, 실패했다면 null-->
	<insert id="saveSMSHistory" parameterType="sendSmsHistory" >
		INSERT INTO TBL_SEND_SMS_HISTORY(sh_send_code, sh_send_datetime, sh_send_center_code, sh_recipient_name, sh_recipient_phone, sh_recipient_content, sh_success_yn, sh_success_datetime, sh_fail_reason)
		VALUES(#{shSendCode}, CURRENT_TIMESTAMP, #{shSendCenterCode}, #{shRecipientName}, #{shRecipientPhone}, #{shRecipientContent}, #{shSuccessYn},
		<choose>
            <when test="shSuccessYn">
                CURRENT_TIMESTAMP
            </when>
            <otherwise>
                NULL
            </otherwise>
        </choose>
        ,#{shFailReason})
	</insert>
	<!-- =========================================================== -->
	
	
	<!-- ========================= 예약 취소 ========================= -->
	<!-- 그룹 수업의 예약 취소  -->
	<update id="cancelReservationGroup" parameterType="java.util.Map"  >
		<!-- 01. 회원테이블 수강권 매수 +1 -->
		UPDATE TBL_CST
		SET TICKET_REMAINING_COUNT_GROUP1=(TICKET_REMAINING_COUNT_GROUP1+1)
		WHERE CS_MEMBER_CODE=#{csMemberCode};
		
		<!-- 02. 수업테이블 현재신청인원 -1 -->
		UPDATE TBL_LESSON
		SET LS_CURRENT_APPLICANTS=(LS_CURRENT_APPLICANTS-1)
		WHERE LS_CODE=#{lsCode};
		
		<!-- 03. 예약 테이블 취소여부 true -->
		UPDATE TBL_RESERV
		SET RS_CANCEL_YN=TRUE
		WHERE RS_CODE=#{rsCode};
		
		<!-- 04. 출결 테이블의 회원코드 지우기  -->
		UPDATE TBL_ATTEND
		SET
		    AT_MEMBER1_CODE = CASE WHEN AT_MEMBER1_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER1_CODE END,
		    AT_MEMBER2_CODE = CASE WHEN AT_MEMBER1_CODE != #{csMemberCode} AND AT_MEMBER2_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER2_CODE END,
		    AT_MEMBER3_CODE = CASE WHEN AT_MEMBER1_CODE != #{csMemberCode} AND AT_MEMBER2_CODE != #{csMemberCode} AND AT_MEMBER3_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER3_CODE END,
		    AT_MEMBER4_CODE = CASE WHEN AT_MEMBER1_CODE != #{csMemberCode} AND AT_MEMBER2_CODE != #{csMemberCode} AND AT_MEMBER3_CODE != #{csMemberCode} AND AT_MEMBER4_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER4_CODE END,
		    AT_MEMBER5_CODE = CASE WHEN AT_MEMBER1_CODE != #{csMemberCode} AND AT_MEMBER2_CODE != #{csMemberCode} AND AT_MEMBER3_CODE != #{csMemberCode} AND AT_MEMBER4_CODE != #{csMemberCode} AND AT_MEMBER5_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER5_CODE END,
		    AT_MEMBER6_CODE = CASE WHEN AT_MEMBER1_CODE != #{csMemberCode} AND AT_MEMBER2_CODE != #{csMemberCode} AND AT_MEMBER3_CODE != #{csMemberCode} AND AT_MEMBER4_CODE != #{csMemberCode} AND AT_MEMBER5_CODE != #{csMemberCode} AND AT_MEMBER6_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER6_CODE END
		WHERE LESSON_CODE = #{lsCode};
	    	
		<!-- STEP05. 알림 테이블 등록(NoticeDAO에서 진행) -->
	</update>
	
	<!-- 개인 수업의 예약 취소  -->
	<update id="cancelReservationPersonal" parameterType="java.util.Map"  >
		<!-- 01. 회원테이블 수강권 매수 +1 -->
		UPDATE TBL_CST
		SET TICKET_REMAINING_COUNT_PERSONAL1=(TICKET_REMAINING_COUNT_PERSONAL1+1)
		WHERE CS_MEMBER_CODE=#{csMemberCode};
		
		<!-- 02. 수업테이블 현재신청인원 -1 -->
		UPDATE TBL_LESSON
		SET LS_CURRENT_APPLICANTS=(LS_CURRENT_APPLICANTS-1)
		WHERE LS_CODE=#{lsCode};
		
		<!-- 03. 예약 테이블 취소여부 true -->
		UPDATE TBL_RESERV
		SET RS_CANCEL_YN=TRUE
		WHERE RS_CODE=#{rsCode};

		<!-- 04. 출결 테이블의 회원코드 지우기  -->
		UPDATE TBL_ATTEND
		SET
		    AT_MEMBER1_CODE = CASE WHEN AT_MEMBER1_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER1_CODE END,
		    AT_MEMBER2_CODE = CASE WHEN AT_MEMBER1_CODE != #{csMemberCode} AND AT_MEMBER2_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER2_CODE END,
		    AT_MEMBER3_CODE = CASE WHEN AT_MEMBER1_CODE != #{csMemberCode} AND AT_MEMBER2_CODE != #{csMemberCode} AND AT_MEMBER3_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER3_CODE END,
		    AT_MEMBER4_CODE = CASE WHEN AT_MEMBER1_CODE != #{csMemberCode} AND AT_MEMBER2_CODE != #{csMemberCode} AND AT_MEMBER3_CODE != #{csMemberCode} AND AT_MEMBER4_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER4_CODE END,
		    AT_MEMBER5_CODE = CASE WHEN AT_MEMBER1_CODE != #{csMemberCode} AND AT_MEMBER2_CODE != #{csMemberCode} AND AT_MEMBER3_CODE != #{csMemberCode} AND AT_MEMBER4_CODE != #{csMemberCode} AND AT_MEMBER5_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER5_CODE END,
		    AT_MEMBER6_CODE = CASE WHEN AT_MEMBER1_CODE != #{csMemberCode} AND AT_MEMBER2_CODE != #{csMemberCode} AND AT_MEMBER3_CODE != #{csMemberCode} AND AT_MEMBER4_CODE != #{csMemberCode} AND AT_MEMBER5_CODE != #{csMemberCode} AND AT_MEMBER6_CODE = #{csMemberCode} THEN 0 ELSE AT_MEMBER6_CODE END
		WHERE LESSON_CODE = #{lsCode};
		
		<!-- STEP05. 알림 테이블 등록(NoticeDAO에서 진행) -->
	</update>

	<!-- =========================================================== -->
	
	<!-- 예약 가능 여부 체크 1. 기존 예약 여부 체크 -->
	<select id="checkReservation" parameterType="java.util.Map" resultType="int" >
		SELECT COUNT(*) 
		FROM TBL_RESERV
		WHERE LESSON_CODE=#{lsCode}
  			AND MEMBER_CODE=#{csMemberCode}
  			AND RS_CANCEL_YN=FALSE ;
	</select>
	
	<!-- 예약 가능 여부 체크 2. 선택한 센터에 맞는 수강권 보유 여부 체크   -->
	<select id="checkTicket"  resultType="int" >
		SELECT COUNT(*) 
		FROM TBL_TICKET
		WHERE
		    TK_CODE = (
		        SELECT TICKET_CODE_GROUP1
		        FROM TBL_CST
		        WHERE CS_MEMBER_CODE=#{csMemberCode}
		    )
		    AND CENTER_CODE=#{centerCode}
		  OR
		    TK_CODE = (
		        SELECT TICKET_CODE_PERSONAL1
		        FROM TBL_CST
		        WHERE CS_MEMBER_CODE=#{csMemberCode}
		    )
		    AND CENTER_CODE=#{centerCode}
	</select>
	
	<!-- (미사용) 출결레코드 자동 생성 대상 - 수업코드로 예약 조회 -->
	<select id="getMemberCodesByLessonCode" resultMap="codeResult">
		SELECT MEMBER_CODE 
		FROM TBL_RESERV 
		WHERE LESSON_CODE=#{lessonCode}
	</select>
	
	
	
	
	
</mapper>