<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="AttendDAO">
	<resultMap type="attend" id="attendResult">
		<id property="atCode" column="AT_CODE" />
		<result property="atDate" column="AT_DATE" />
		<result property="lessonCode" column="LESSON_CODE" />
		<result property="atMember1Code" column="AT_MEMBER1_CODE" />
		<result property="atAttendance1Yn" column="AT_ATTENDANCE1_YN" />
		<result property="atMember2Code" column="AT_MEMBER2_CODE" />
		<result property="atAttendance2Yn" column="AT_ATTENDANCE2_YN" />
		<result property="atMember3Code" column="AT_MEMBER3_CODE" />
		<result property="atAttendance3Yn" column="AT_ATTENDANCE3_YN" />
		<result property="atMember4Code" column="AT_MEMBER4_CODE" />
		<result property="atAttendance4Yn" column="AT_ATTENDANCE4_YN" />
		<result property="atMember5Code" column="AT_MEMBER5_CODE" />
		<result property="atAttendance5Yn" column="AT_ATTENDANCE5_YN" />
		<result property="atMember6Code" column="AT_MEMBER6_CODE" />
		<result property="atAttendance6Yn" column="AT_ATTENDANCE6_YN" />
		<result property="atDate" column="AT_DATE" />
		<result property="atCheckYn" column="AT_CHECK_YN" />
		<result property="csMemberCode" column="CS_MEMBER_CODE" />
		<result property="csMemberCode" column="CS_NAME" />
		<result property="member1Name" column="MEMBER1_NAME" />
		<result property="member2Name" column="MEMBER2_NAME" />
		<result property="member3Name" column="MEMBER3_NAME" />
		<result property="member4Name" column="MEMBER4_NAME" />
		<result property="member5Name" column="MEMBER5_NAME" />
		<result property="member6Name" column="MEMBER6_NAME" />
	</resultMap>

	<resultMap type="com.dev.pilafix.common.member.CenterVO" id="centerForLesson">
		<result property="ctName" column="CT_NAME" />
	</resultMap>

	<resultMap type="com.dev.pilafix.common.member.MemberVO" id="reservedMember">
		<result property="csMemberCode" column="CS_MEMBER_CODE" />
		<result property="csName" column="CS_NAME" />
	</resultMap>

<!-- 수업 상세에서 출결 처리 위한 수업예약한 회원이름, 회원코드 -->
<!-- 회원이름 , 회원코드 둘다-->
<select id="getReservedMembersNamesForLesson" parameterType="String" resultMap="reservedMember">
	SELECT CST.*
	FROM TBL_RESERV RSV
	JOIN TBL_CST CST ON RSV.MEMBER_CODE = CST.CS_MEMBER_CODE
	WHERE RSV.LESSON_CODE = #{lessonCode}
			AND RSV.RS_CANCEL_YN = FALSE;
</select>

<!-- 레슨코드로 가져오는 AttendVO -->
<select id="selectAttendanceByLessonCode" parameterType="String" resultMap="attendResult">
SELECT
    A.*,
    C1.CS_NAME AS MEMBER1_NAME,
    C2.CS_NAME AS MEMBER2_NAME,
    C3.CS_NAME AS MEMBER3_NAME,
    C4.CS_NAME AS MEMBER4_NAME,
    C5.CS_NAME AS MEMBER5_NAME,
    C6.CS_NAME AS MEMBER6_NAME
FROM
    TBL_ATTEND A
LEFT JOIN TBL_CST C1 ON A.AT_MEMBER1_CODE = C1.CS_MEMBER_CODE
LEFT JOIN TBL_CST C2 ON A.AT_MEMBER2_CODE = C2.CS_MEMBER_CODE
LEFT JOIN TBL_CST C3 ON A.AT_MEMBER3_CODE = C3.CS_MEMBER_CODE
LEFT JOIN TBL_CST C4 ON A.AT_MEMBER4_CODE = C4.CS_MEMBER_CODE
LEFT JOIN TBL_CST C5 ON A.AT_MEMBER5_CODE = C5.CS_MEMBER_CODE
LEFT JOIN TBL_CST C6 ON A.AT_MEMBER6_CODE = C6.CS_MEMBER_CODE
WHERE A.LESSON_CODE = #{lsCode}
</select>

<!-- 출석업데이트 -->
<!-- checkbox에서 선택되어 넘어온 회원들만 at_Attendance#_Yn = true -->
<!-- at_check_yn(출석체크여부) true로 update해야함 -->
<update id="updateMemberAttendance"> 
   UPDATE TBL_ATTEND
    SET 
        at_check_yn = true,
        at_Attendance1_Yn = CASE WHEN at_Member1_Code = #{memberCode} THEN true ELSE at_Attendance1_Yn END,
        at_Attendance2_Yn = CASE WHEN at_Member2_Code = #{memberCode} THEN true ELSE at_Attendance2_Yn END,
        at_Attendance3_Yn = CASE WHEN at_Member3_Code = #{memberCode} THEN true ELSE at_Attendance3_Yn END,
        at_Attendance4_Yn = CASE WHEN at_Member4_Code = #{memberCode} THEN true ELSE at_Attendance4_Yn END,
        at_Attendance5_Yn = CASE WHEN at_Member5_Code = #{memberCode} THEN true ELSE at_Attendance5_Yn END,
        at_Attendance6_Yn = CASE WHEN at_Member6_Code = #{memberCode} THEN true ELSE at_Attendance6_Yn END
    WHERE at_Code = #{atCode}
</update>


<!-- 회원코드 -->
<select id="getReservedMemberCodeForLesson" parameterType="String" resultType="Integer">
    SELECT CST.CS_MEMBER_CODE
    FROM TBL_RESERV RSV
    JOIN TBL_CST CST ON RSV.MEMBER_CODE = CST.CS_MEMBER_CODE
    JOIN TBL_ATTEND ATT ON RSV.LESSON_CODE = ATT.LESSON_CODE
    WHERE RSV.LESSON_CODE = #{lessonCode}
    AND RSV.RS_CANCEL_YN = FALSE;
</select>
<!-- 회원이름 -->
<select id="getReservedNameForLesson" parameterType="String" resultType="String">
    SELECT CST.CS_NAME
    FROM TBL_RESERV RSV
    JOIN TBL_CST CST ON RSV.MEMBER_CODE = CST.CS_MEMBER_CODE
    JOIN TBL_ATTEND ATT ON RSV.LESSON_CODE = ATT.LESSON_CODE
    WHERE RSV.LESSON_CODE = #{lessonCode}
    AND RSV.RS_CANCEL_YN = FALSE;
</select>

	
<!-- 예약된 회원 수 -->
<select id="getReservedCountForLesson" parameterType="String" resultType="int">
  SELECT COUNT(*) FROM TBL_RESERV
  WHERE LESSON_CODE = #{lessonCode} 
    AND RS_CANCEL_YN = FALSE
    AND MEMBER_CODE != 0;
</select>

<!-- 출석한 회원 수 -->
<select id="getAttendedCountForLesson" parameterType="String" resultType="int">
SELECT
    SUM(
        CASE WHEN at_Attendance1_Yn = true THEN 1 ELSE 0 END +
        CASE WHEN at_Attendance2_Yn = true THEN 1 ELSE 0 END +
        CASE WHEN at_Attendance3_Yn = true THEN 1 ELSE 0 END +
        CASE WHEN at_Attendance4_Yn = true THEN 1 ELSE 0 END +
        CASE WHEN at_Attendance5_Yn = true THEN 1 ELSE 0 END +
        CASE WHEN at_Attendance6_Yn = true THEN 1 ELSE 0 END
    )
FROM
    TBL_ATTEND
WHERE
    at_Code = #{atCode}
</select>
	
<!-- 결석한 회원 수 -->
<select id="getAbsentCountForLesson" parameterType="String" resultType="int">
SELECT
    SUM(
        CASE WHEN at_Attendance1_Yn = false AND at_Member1_Code > 0 THEN 1 ELSE 0 END +
        CASE WHEN at_Attendance2_Yn = false AND at_Member2_Code > 0 THEN 1 ELSE 0 END +
        CASE WHEN at_Attendance3_Yn = false AND at_Member3_Code > 0 THEN 1 ELSE 0 END +
        CASE WHEN at_Attendance4_Yn = false AND at_Member4_Code > 0 THEN 1 ELSE 0 END +
        CASE WHEN at_Attendance5_Yn = false AND at_Member5_Code > 0 THEN 1 ELSE 0 END +
        CASE WHEN at_Attendance6_Yn = false AND at_Member6_Code > 0 THEN 1 ELSE 0 END
    )
FROM
    TBL_ATTEND
WHERE
    at_Code = #{atCode}
</select>

	
<!-- 출석수 / 결석수  -->	
<select id="getAttendanceCounts" parameterType="String" resultType="Map">
SELECT
    SUM(
        CASE 
            WHEN at_Attendance1_Yn = 'true' THEN 1 
            WHEN at_Attendance2_Yn = 'true' THEN 1 
            WHEN at_Attendance3_Yn = 'true' THEN 1 
            WHEN at_Attendance4_Yn = 'true' THEN 1 
            WHEN at_Attendance5_Yn = 'true' THEN 1 
            WHEN at_Attendance6_Yn = 'true' THEN 1 
            ELSE 0 
        END
    ) AS presentCount,
    SUM(
        CASE 
            WHEN at_Attendance1_Yn = 'false' AND at_Member1_Code > 0 THEN 1 
            WHEN at_Attendance2_Yn = 'false' AND at_Member2_Code > 0 THEN 1 
            WHEN at_Attendance3_Yn = 'false' AND at_Member3_Code > 0 THEN 1 
            WHEN at_Attendance4_Yn = 'false' AND at_Member4_Code > 0 THEN 1 
            WHEN at_Attendance5_Yn = 'false' AND at_Member5_Code > 0 THEN 1 
            WHEN at_Attendance6_Yn = 'false' AND at_Member6_Code > 0 THEN 1 
            ELSE 0 
        END
    ) AS absentCount
FROM
    TBL_ATTEND
WHERE
    at_Code = #{atCode}
</select>		






	<!-- (미사용) 출결 레코드 자동 생성 -->
	<insert id="insertAttendance" parameterType="attend"> 
		INSERT INTO TBL_ATTEND 
		VALUES (CONCAT('AT', NEXTVAL('SEQ_ATTEND')), #{lessonCode}, #{atMember1Code}, 
		#{atAttendance1Yn}, #{atMember2Code}, #{atAttendance2Yn}, #{atMember3Code}, 
		#{atAttendance3Yn}, #{atMember4Code}, #{atAttendance4Yn}, #{atMember5Code}, 
		#{atAttendance5Yn}, #{atMember6Code}, #{atAttendance6Yn}, CURRENT_DATE)
	</insert> 
	 

	<!-- 자동 출결 처리  -->
	<update id="updateAttendStatus"> 
        <![CDATA[
		UPDATE tbl_attend att
		SET at_check_yn = true
		FROM tbl_lesson ls
		WHERE att.lesson_code = ls.ls_code
		    AND ls.ls_date = CURRENT_DATE
		    AND (CURRENT_TIME > ls.ls_time::time)  
			AND att.at_check_yn=false;
	   	]]>
	</update> 





<!-- ################################ -->

	
	<!-- 강사가 그룹수업 상세에서 출석버튼 눌렀을때 출결 처리 -->
	<!-- selectedMemberCodes와 memberCode(AT_MEMBER?_CODE)가 일치하면 해당 출결Yn=true or default(false) -->
<update id="updateAttendanceGroupLesson" parameterType="map">
    UPDATE TBL_ATTEND
    SET
    AT_ATTENDANCE1_YN = CASE WHEN AT_MEMBER1_CODE IN 
        <foreach collection="selectedMemberCodes" item="memberCode" open="(" separator="," close=")">
            #{memberCode}
        </foreach>
    THEN TRUE ELSE AT_ATTENDANCE1_YN END,
    AT_ATTENDANCE2_YN = CASE WHEN AT_MEMBER2_CODE IN 
        <foreach collection="selectedMemberCodes" item="memberCode" open="(" separator="," close=")">
            #{memberCode}
        </foreach>
    THEN TRUE ELSE AT_ATTENDANCE2_YN END,
    AT_ATTENDANCE3_YN = CASE WHEN AT_MEMBER3_CODE IN 
        <foreach collection="selectedMemberCodes" item="memberCode" open="(" separator="," close=")">
            #{memberCode}
        </foreach>
    THEN TRUE ELSE AT_ATTENDANCE3_YN END,
    AT_ATTENDANCE4_YN = CASE WHEN AT_MEMBER4_CODE IN 
        <foreach collection="selectedMemberCodes" item="memberCode" open="(" separator="," close=")">
            #{memberCode}
        </foreach>
    THEN TRUE ELSE AT_ATTENDANCE4_YN END,
    AT_ATTENDANCE5_YN = CASE WHEN AT_MEMBER5_CODE IN 
        <foreach collection="selectedMemberCodes" item="memberCode" open="(" separator="," close=")">
            #{memberCode}
        </foreach>
    THEN TRUE ELSE AT_ATTENDANCE5_YN END,
    AT_ATTENDANCE6_YN = CASE WHEN AT_MEMBER6_CODE IN 
        <foreach collection="selectedMemberCodes" item="memberCode" open="(" separator="," close=")">
            #{memberCode}
        </foreach>
    THEN TRUE ELSE AT_ATTENDANCE6_YN END
    WHERE LESSON_CODE = #{lessonCode}
</update>


<!-- <update id="updateAttendanceGroupLesson" parameterType="map">
    UPDATE TBL_ATTEND
    <set>
      <if test="member1Checked != null">
        AT_ATTENDANCE1_YN = #{member1Checked},
      </if>
      <if test="member2Checked != null">
        AT_ATTENDANCE2_YN = #{member2Checked},
      </if>
      <if test="member3Checked != null">
        AT_ATTENDANCE3_YN = #{member3Checked},
      </if>
      <if test="member4Checked != null">
        AT_ATTENDANCE4_YN = #{member4Checked},
      </if>
      <if test="member5Checked != null">
        AT_ATTENDANCE5_YN = #{member5Checked},
      </if>
      <if test="member6Checked != null">
        AT_ATTENDANCE6_YN = #{member6Checked},
      </if>
    </set>
    WHERE LESSON_CODE = #{lessonCode}
</update> -->

	
<!-- 강사가 개인수업 상세에서 출석버튼 눌렀을때 출결 처리 -->
<update id="updateAttendancePersonalLesson" parameterType="map">
    UPDATE TBL_ATTEND
    SET AT_ATTENDANCE1_YN = TRUE
    WHERE LESSON_CODE = #{lessonCode} AND AT_MEMBER1_CODE = #{memberCode};
</update>
<!-- <update id="updateAttendancePersonalLesson" parameterType="map">
	UPDATE TBL_ATTEND
	SET 
	AT_ATTENDANCE1_YN = CASE WHEN AT_MEMBER1_CODE = #{selectedMemberCode} THEN TRUE ELSE FALSE END
	WHERE LESSON_CODE = #{lessonCode};
</update>
	 -->
<!-- ################################ -->
	<!-- 수업 상세에서 예약된 회원 이름만 따로 SELECT-->
	<!-- resultType="string"
	<select id="getReservedMembersNamesForLesson" parameterType="int" resultMap="reservedMember">
	  SELECT  CST.CS_NAME
	  FROM TBL_RESERV RSV
	  JOIN TBL_CST CST ON RSV.MEMBER_CODE = CST.CS_MEMBER_CODE
	  WHERE RSV.LESSON_CODE = #{lessonCode}
			AND RSV.RS_CANCEL_YN = FALSE;
	</select> -->


</mapper>