<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ComplaintsDAO">
	<resultMap type="complaintsInfo" id="ComplaintsInfoResult">
		<id property="cpCode" column="CP_CODE"/>
		<result property="cpTargetPostNumber" column="CP_TARGET_POST_NUMBER" />
		<result property="cpTargetPostType" column="CP_TARGET_POST_TYPE" />
		<result property="targetWriterMemberCode" column="TARGET_WRITER_MEMBER_CODE" />
		<result property="blamerMemberCode" column="BLAMER_MEMBER_CODE" />
		<result property="cpDate" column="CP_DATE" />
		<result property="blamerIp" column="BLAMER_IP" />
		<result property="blamerIp" column="BLAMER_IP" />
		<result property="cmTitle" column="CM_TITLE" />
		<result property="cmContent" column="CM_CONTENT" />
		<result property="blameReasonName" column="BLAME_REASON_NAME" />
		<result property="csEmailId" column="CS_EMAIL_ID" />
		<result property="csName" column="CS_NAME" />
		<result property="cmBlameCount" column="CM_BLAME_COUNT" />
		<result property="cmOpenYn" column="CM_OPEN_YN" />
	</resultMap>
	
	<resultMap type="community" id="communityResult">
		<id property="cmNumber" column="CM_NUMBER"></id>
		<result property="cmTitle" column="CM_TITLE"/>
		<result property="cmContent" column="CM_CONTENT"/>
		<result property="cmWriterMemberCode" column="CM_WRITER_MEMBER_CODE"/>
		<result property="csName" column="CS_NAME"/>
		<result property="cmRegdate" column="CM_REGDATE"/>
	</resultMap>	
	

	<!-- 신고글 리스트  -->
	<select id="getComplaintsInfoList" resultMap="communityResult" >
		<!--
		SELECT CM_BLAME_COUNT, CS_NAME, CS_EMAIL_ID, BLAME_REASON_NAME, CM_CONTENT, CM_TITLE, CM_OPEN_YN
	       CP_CODE, CP_TARGET_POST_NUMBER, CP_TARGET_POST_TYPE, TARGET_WRITER_MEMBER_CODE,
	       BLAMER_MEMBER_CODE, CP_DATE, BLAMER_IP
			FROM (
			    SELECT B.CM_BLAME_COUNT, D.CS_NAME, D.CS_EMAIL_ID,
			           C.BLAME_REASON_NAME, B.CM_CONTENT, B.CM_TITLE,
			           A.CP_CODE, A.CP_TARGET_POST_NUMBER, 
			           A.CP_TARGET_POST_TYPE, A.TARGET_WRITER_MEMBER_CODE,
			           A.BLAMER_MEMBER_CODE, A.CP_DATE, A.BLAMER_IP, 
			           ROW_NUMBER() OVER (PARTITION BY A.CP_TARGET_POST_NUMBER ORDER BY A.CP_CODE DESC) AS rn
			    FROM TBL_COMPLAINTS AS A 
			    INNER JOIN TBL_COMMUNITY AS B ON CAST(A.CP_TARGET_POST_NUMBER AS INTEGER) = B.CM_NUMBER 
			    INNER JOIN TBL_CST AS D ON A.TARGET_WRITER_MEMBER_CODE = D.CS_MEMBER_CODE 
			    INNER JOIN TBL_COMPLAINTS_REASON AS C ON A.BLAME_REASON_CODE = C.BLAME_REASON_CODE 
			) AS sub
			WHERE rn = 1
			ORDER BY CP_CODE DESC; 
			 -->
		
		<!-- 아래꺼 완료되면 위 내용 지우기  -->
		 
		SELECT * FROM TBL_COMMUNITY 
		WHERE CM_BLAME_COUNT > 0
	</select>
	
	
	
	<select id="getComplaintsInfo" resultMap="ComplaintsInfoResult" parameterType="complaintsInfo">
		SELECT * FROM TBL_COMPLAINTS AS A
			INNER JOIN TBL_COMMUNITY AS B ON CAST (A.CP_TARGET_POST_NUMBER AS INTEGER) = B.CM_NUMBER
			INNER JOIN TBL_CST AS D ON A.TARGET_WRITER_MEMBER_CODE = D.CS_MEMBER_CODE
			INNER JOIN TBL_COMPLAINTS_REASON AS C ON A.BLAME_REASON_CODE =C.BLAME_REASON_CODE 
			WHERE CP_CODE = #{cpCode}
	</select>
	
	
	<!-- 신고글 처리 시 커뮤니티 비공개 상태로 변경  -->
	<update id="updateCmOpenYn" parameterType="Integer">
		UPDATE TBL_COMMUNITY 
		set CM_OPEN_YN='false' 
		WHERE CM_NUMBER=#{cpCode}
	</update>
	
	<!-- 신고자 목록 조회 -->
	<select id="getAllComplaintsList" resultMap="ComplaintsInfoResult" >
		<!-- 
		SELECT 
		A.TARGET_WRITER_MEMBER_CODE,A.CP_TARGET_POST_NUMBER, D.CS_NAME, 
		D.CS_EMAIL_ID, C.BLAME_REASON_NAME, A.TARGET_WRITER_MEMBER_CODE, A.CP_OPEN_YN, 
		A.cp_code FROM TBL_COMPLAINTS AS A 
		INNER JOIN TBL_COMMUNITY AS B ON a.cp_target_post_number = B.cm_number
		INNER JOIN TBL_CST AS D ON A.TARGET_WRITER_MEMBER_CODE = D.CS_MEMBER_CODE
		INNER JOIN TBL_COMPLAINTS_REASON AS C ON A.BLAME_REASON_CODE = C.BLAME_REASON_CODE 
		where A.cp_target_post_number = #{cpTargetPostNumber}
		ORDER BY A.TARGET_WRITER_MEMBER_CODE, A.CP_CODE DESC  -->
		
		 <!-- SELECT DISTINCT ON (A.TARGET_WRITER_MEMBER_CODE)
	       A.CP_TARGET_POST_NUMBER, D.CS_NAME, 
	       D.CS_EMAIL_ID, C.BLAME_REASON_NAME, A.TARGET_WRITER_MEMBER_CODE, 
	       A.CP_OPEN_YN, A.cp_code 
			FROM TBL_COMPLAINTS AS A 
			INNER JOIN TBL_COMMUNITY AS B ON CAST(A.CP_TARGET_POST_NUMBER AS INTEGER) = B.CM_NUMBER 
			INNER JOIN TBL_CST AS D ON A.TARGET_WRITER_MEMBER_CODE = D.CS_MEMBER_CODE 
			INNER JOIN TBL_COMPLAINTS_REASON AS C ON A.BLAME_REASON_CODE = C.BLAME_REASON_CODE 
			ORDER BY A.TARGET_WRITER_MEMBER_CODE, A.CP_CODE DESC;	 -->
		
		 <!-- SELECT A.CP_TARGET_POST_NUMBER, D.CS_NAME, 
			       D.CS_EMAIL_ID, C.BLAME_REASON_NAME, 
			       A.CP_TARGET_POST_NUMBER, A.TARGET_WRITER_MEMBER_CODE, 
			       A.CP_OPEN_YN, A.cp_code 
			FROM TBL_COMPLAINTS AS A 
			INNER JOIN TBL_COMMUNITY AS B ON 
			    CAST(A.CP_TARGET_POST_NUMBER AS INTEGER) = B.CM_NUMBER 
			INNER JOIN TBL_CST AS D ON 
			    A.TARGET_WRITER_MEMBER_CODE = D.CS_MEMBER_CODE 
			INNER JOIN TBL_COMPLAINTS_REASON AS C ON 
			    A.BLAME_REASON_CODE = C.BLAME_REASON_CODE 
			WHERE A.CP_TARGET_POST_NUMBER IN (
			    SELECT CP_TARGET_POST_NUMBER 
			    FROM TBL_COMPLAINTS 
			    GROUP BY CP_TARGET_POST_NUMBER 
			    HAVING COUNT(*) > 1
			)
			ORDER BY A.CP_TARGET_POST_NUMBER, A.CP_CODE DESC; -->
	</select>
	
	<!-- 툴팁으로 뜨는 사유 가져오는 리스트인 것 같음 
	<select id="getBlameReasonsByCount" resultMap="ComplaintsInfoResult" >
		SELECT
            A.TARGET_WRITER_MEMBER_CODE,
            A.CP_TARGET_POST_NUMBER,
            D.CS_NAME,
            D.CS_EMAIL_ID,
            C.BLAME_REASON_NAME,
            A.TARGET_WRITER_MEMBER_CODE,
            A.CP_OPEN_YN,
            A.CP_CODE
        FROM
            TBL_COMPLAINTS AS A
            INNER JOIN TBL_COMMUNITY AS B ON A.CP_TARGET_POST_NUMBER = B.CM_NUMBER
            INNER JOIN TBL_CST AS D ON A.TARGET_WRITER_MEMBER_CODE = D.CS_MEMBER_CODE
            INNER JOIN TBL_COMPLAINTS_REASON AS C ON A.BLAME_REASON_CODE = C.BLAME_REASON_CODE
        WHERE
            A.CP_TARGET_POST_NUMBER = #{cmBlameCount}
        ORDER BY
            A.TARGET_WRITER_MEMBER_CODE,
            A.CP_CODE DESC
    </select>
	
	 -->
	
	
</mapper>